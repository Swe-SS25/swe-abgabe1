name: CI/CD Pipeline

on:
  push:
    branches: ["main", "release/*"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  lint:
    name: Lint (Prettier & ESLint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      #- name: Check formatting with Prettier
       # run: npm run prettier:check
        # (Assumes "prettier:check": "prettier --check \"src/**/*.js\"" in package.json)

      - name: Run ESLint
        run: npm run lint
        # (Assumes "lint": "eslint \"src/**/*.js\"" in package.json)

  build-test:
    name: Build & Test
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache npm modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        # (Assumes "build" script is defined in package.json)

      - name: Run tests
        run: npm test
        # (Assumes "test" script is defined in package.json)

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
